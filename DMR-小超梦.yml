# 本文件一个代表一个录制任务，这里的设置基本上包含了所有可用的参数
# 配置文件编写请参考 https://github.com/SmallPeaches/DanmakuRender 
common_event_args:
  # 启动自动渲染
  auto_render: False
  # 启动自动上传
  auto_upload: True
  # 启动自动清理
  auto_clean: True
  # 原视频自动转码
  auto_transcode: False

# 下载参数
download_args:
  # 下载类型
  dltype: live
  # 直播间链接
  url: 'https://www.huya.com/257085'
  # 录制输出文件夹，设置为空则使用任务名称作为文件夹
  output_dir: ./直播回放
  # 录制文件名称格式，可使用关键字替换，默认效果：飞天狙想要努力变胖-2023年3月1日20点30分，注意这里不能含有冒号，斜杠等非法字符！！
  output_name: '{STREAMER.NAME}-{CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日{CTIME.HOUR:02d}点{CTIME.MINUTE:02d}分'
  # 录播分段时间（秒），默认一个小时
  segment: 1800
  # 录制程序引擎，可选ffmpeg, streamgears 或者 streamlink
  # 在使用streamgears作为录制引擎时不支持录制B站hls流
  # 建议PC推流的直播使用ffmpeg录制，手机推流的直播使用streamgears录制
  # 录制twitch等特殊平台建议使用streamlink
  engine: ffmpeg
  # 是否录制弹幕
  danmaku: False
  # 是否录制直播流
  video: True
  # 延迟下播计时（分钟）
  # 使用这个功能可以把主播短暂下播又开播认定为同一场直播
  stop_wait_time: 5
  # 录制视频的格式，默认flv
  output_format: flv

  # 以下是弹幕录制参数
  # 弹幕录制格式，只能选择ass
  dm_format: ass 
  # 弹幕上下间距（行距），设置为0-1的表示为视频宽度的倍数，设置为大于1的数表示像素，默认6
  margin_h: 6
  # 弹幕左右间距，设置为-1表示允许弹幕叠加，设置为0-1的表示间距为视频宽度的倍数，设置为大于1的数表示像素，默认0.05
  # 实际上这个东西就是弹幕密度，弹幕左右间距越大密度越小
  margin_w: 12
  # 指定弹幕占屏幕的最大比例（即屏幕上半部分有多少可以用来显示弹幕），默认为0.4
  dmrate: 0.4
  # 指定弹幕字体，默认为微软雅黑字体(Microsoft YaHei)
  font: Microsoft YaHei
  # 指定弹幕字体大小，默认为36
  fontsize: 36
  # Distance from Screen Top 弹幕距离屏幕顶端的距离（像素，例如20，表示距离屏幕顶端20px）
  dst: 20
  # 指定单条弹幕持续时间（秒），默认为16
  dmduration: 16
  # 指定弹幕不透明度，默认为0.8
  opacity: 0.8
  # 使用自适应弹幕大小（会让把设置的弹幕大小按1080P标准缩放）
  auto_fontsize: True
  # 弹幕描边颜色(6位十六进制)
  outlinecolor: 000000
  # 弹幕描边宽度
  outlinesize: 1.0
  # 弹幕过滤规则，满足其中任意条件的弹幕将被过滤
  dm_filter:
    # 关键字过滤，只要有关键字的弹幕都会被过滤
    # 例如：[菜, fw]
    keywords: ~
    # 用户名称过滤，只有用户名称完全与发弹幕的用户名相同才会过滤
    # 例如：[虎牙小助手, TwitchBot]
    username: ~
    # 最长弹幕长度，超过此长度的弹幕将被过滤，0表示不限制
    max_length: 0

# 上传参数，如果不需要上传就把下面的都删了
upload_args:
  # 原视频
  src_video: 
    # 上传账号名称，程序依靠这个来识别不同的账号，如果打算传不同账号就要设置不同的名称
    account: bilibili
    # 上传cookies路径，如果设置为空将会保存到./login_info/{ACCOUNT}.json
    cookies: ~
    # 重试次数，如果上传遇到错误将会重试，设置为0表示不重试
    # 注意：重试会整个视频重传，并且阻塞后面视频的上传，不应该设置太大
    retry: 3
    # 实时上传（边录边传），每录制一个分段上传一次，同一场直播的不同分P仍然会在一个视频下，默认开启
    # 注意：实时上传可能无法上传很短的视频，尤其是在网速较快的情况下（B站对修改稿件的间隔有限制）
    realtime: True
    # 上传的视频最短长度，小于此长度的视频会被自动过滤，默认120s
    min_length: 120
    # 以下参数来自biliuprs，详细内容可以参考 https://biliup.github.io/biliup-rs/index.html
    # 上传线路，设置为空则由biliuprs自动选择
    line: ~
    # 上传线程数
    limit: 3
    # 是否为转载视频 1-自制 2-转载
    copyright: 1
    # 转载来源，转载视频必填
    source: ''
    # 分区号，分区参考 https://biliup.github.io/tid-ref.html
    tid: 65
    # 封面，指向本地文件地址
    cover: ''
    # 标题，可以使用关键字替换
    # 默认的例子：[飞天狙想要努力变胖/直播回放] 晚上七点半比赛 2023年2月24日 （带弹幕版）
    title: '[{STREAMER.NAME}/直播回放] {TITLE} {CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日'
    # 简介，可以使用关键字替换
    desc: |
      {STREAMER.NAME} 的直播回放
      标题：{TITLE} 
      时间：{CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日
      直播地址：{STREAMER.URL} 

      ————————————
      由DanmakuRender录制：
      https://github.com/SmallPeaches/DanmakuRender
    # 动态内容，可以使用关键字替换
    dynamic: '{STREAMER.NAME} 的直播回放，{CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日'
    # 标签（一定要有！多个标签逗号分割）
    tag: '直播回放,小超梦,英雄联盟'
    # 延迟发布，单位秒，如果需要的话至少设置14400秒（4个小时）
    dtime: 14400
    # 是否开启杜比音效? 0-关闭 1-开启
    dolby: 0
    # 允许转载? 0-允许转载，1-禁止转载
    no_reprint: 1
    # 是否开启充电? 0-关闭 1-开启
    open_elec: 1
  
  # 弹幕视频
  dm_video: 
    # 上传账号名称，程序依靠这个来识别不同的账号，如果打算传不同账号就要设置不同的名称
    account: bilibili
    # 上传cookies路径，如果设置为空将会保存到./login_info/{ACCOUNT}.json
    cookies: ~
    # 重试次数，如果上传遇到错误将会重试，设置为0表示不重试
    # 注意：重试会整个视频重传，并且阻塞后面视频的上传，不应该设置太大
    retry: 3
    # 实时上传（边录边传），每录制一个分段上传一次，同一场直播的不同分P仍然会在一个视频下，默认开启
    # 注意：实时上传可能无法上传很短的视频，尤其是在网速较快的情况下（B站对修改稿件的间隔有限制）
    realtime: True
    # 上传的视频最短长度，小于此长度的视频会被自动过滤，默认120s
    min_length: 120
    # 以下参数来自biliuprs，详细内容可以参考 https://biliup.github.io/biliup-rs/index.html
    # 上传线路，设置为空则由biliuprs自动选择
    line: ~
    # 上传线程数
    limit: 3
    # 是否为转载视频 1-自制 2-转载
    copyright: 1
    # 转载来源，转载视频必填
    source: ''
    # 分区号，分区参考 https://biliup.github.io/tid-ref.html
    tid: 65
    # 封面，指向本地文件地址
    cover: ''
    # 标题，可以使用关键字替换
    # 默认的例子：[飞天狙想要努力变胖/直播回放] 晚上七点半比赛 2023年2月24日 （带弹幕版）
    title: '[{STREAMER.NAME}/直播回放] {TITLE} {CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日 (弹幕版)'
    # 简介，可以使用关键字替换
    desc: |
      {STREAMER.NAME} 的直播回放
      标题：{TITLE} 
      时间：{CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日
      直播地址：{STREAMER.URL} 

      ————————————
      由DanmakuRender录制：
      https://github.com/SmallPeaches/DanmakuRender
    # 动态内容，可以使用关键字替换
    dynamic: '{STREAMER.NAME} 的直播回放，{CTIME.YEAR}年{CTIME.MONTH:02d}月{CTIME.DAY:02d}日'
    # 标签（一定要有！多个标签逗号分割）
    tag: '小超梦'
    # 延迟发布，单位秒，如果需要的话至少设置14400秒（4个小时）
    dtime: 14400
    # 允许转载? 0-允许转载，1-禁止转载
    no_reprint: 1
    # 是否开启充电? 0-关闭 1-开启
    open_elec: 1

clean_args:
  all:
    # 清理方法，可选copy（复制），move（移动），delete（删除），默认不清理
    # 注意：清理过程不可逆！
    method: delete
    # 目标文件夹，文件夹不存在会自动创建，可以使用关键字替换
    dest: ~
    # 清理延迟（秒），默认86400（24小时）
    delay: 100
    # 清理弹幕视频时同时清理原文件，默认false
    # 请注意，此功能应该只在不上传原文件的情况下使用，否则会导致上传失败
    w_srcfile: False
    # 清理源文件时同时清理转码前文件（如果有的话），默认true
    w_srcpre: True
